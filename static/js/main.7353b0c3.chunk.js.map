{"version":3,"sources":["components/Coin/Coin.jsx","components/CoinList/CoinList.jsx","components/AccountBalance/AccountBalance.jsx","components/ExchangeHeader/logo.svg","components/ExchangeHeader/ExchangeHeader.jsx","App.js","reportWebVitals.js","index.js"],"names":["Td","styled","td","Button","button","Coin","props","name","ticker","price","showBalance","balance","onClick","event","preventDefault","handleRefresh","tickerId","CoinTable","table","CoinList","coinData","map","value","key","Section","section","ButtonBalance","AccountBalance","buttonText","content","amount","handleToggleShowBalance","AppTitle","h1","AppHeader","header","AppLogo","img","ExchangeHeader","src","logo","alt","Component","Div","div","formatPrice","parseFloat","toFixed","App","React","useState","setShowBalance","setCoinData","componentDidMount","a","length","axios","get","response","coinIds","data","slice","coin","id","promises","Promise","all","coinPriceData","symbol","quotes","USD","useEffect","valueChangeId","tickerUrl","newPrice","newCoinData","values","newValues","oldValue","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.7353b0c3.chunk.js","sourcesContent":["import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport styled from 'styled-components';\r\n\r\nconst Td = styled.td`\r\nborder: 1px solid #cccccc;\r\nwidth: 25vh;\r\n`;\r\n\r\nconst Button = styled.button`\r\n  background: transparent;\r\n  border-radius: 3px;\r\n  border: 2px solid palevioletred;\r\n  color: palevioletred;\r\n  margin: 0 1em;\r\n  padding: 0.25em 1em;\r\n`;\r\n\r\nexport default function Coin(props) {\r\n\r\n    const handleClick = (event) => {\r\n        event.preventDefault();\r\n        props.handleRefresh(props.tickerId);\r\n    }\r\n\r\n    return (\r\n        <tr>\r\n            <Td>{props.name}</Td>\r\n            <Td>{props.ticker}</Td>\r\n            <Td>${props.price}</Td>\r\n            {props.showBalance ? <Td>{props.balance}</Td> : null}\r\n            <td><Button onClick = {handleClick}>Refresh</Button></td>\r\n        </tr>\r\n    );\r\n}\r\n\r\nCoin.propTypes = {\r\n    name: PropTypes.string.isRequired,\r\n    ticker: PropTypes.string.isRequired,\r\n    price: PropTypes.number.isRequired\r\n}","import React from 'react';\r\nimport Coin from '../Coin/Coin';\r\nimport styled from 'styled-components';\r\n\r\nconst CoinTable = styled.table`\r\n  margin: 50px auto 50px auto;\r\n  display: inline-block;\r\n  font-size: 1.4rem;\r\n`\r\n\r\nexport default function CoinList(props) {\r\n        return (\r\n                <CoinTable>\r\n                <thead>\r\n                    <tr>\r\n                    <th>Name</th>\r\n                    <th>Ticker</th>\r\n                    <th>Price</th>\r\n                    {props.showBalance ? <th>Balance</th> : null}\r\n                    <th>Actions</th>\r\n                    </tr>\r\n                </thead>\r\n                <tbody>\r\n                    {\r\n                    props.coinData.map(value =>\r\n                    <Coin   key = {value.key}\r\n                            handleRefresh = {props.handleRefresh}\r\n                            name = {value.name}\r\n                            ticker = {value.ticker}\r\n                            balance = {value.balance}\r\n                            showBalance = {props.showBalance}\r\n                            price = {value.price}\r\n                            tickerId = {value.key}/>\r\n                        )\r\n                    }\r\n                </tbody>\r\n                </CoinTable>\r\n        )\r\n}\r\n","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport styled from 'styled-components'\r\n\r\nconst Section = styled.section`\r\n    font-size: 1.5rem;\r\n    background: transparent;\r\n    border-radius: 3px;\r\n    border: 2px solid palevioletred;\r\n    color: palevioletred;\r\n    margin: 0 1em;\r\n    padding: 0.25em 1em;\r\n`;\r\n\r\nconst ButtonBalance = styled.button`\r\n    background: navy;\r\n    border-radius: 3px;\r\n    border: 2px solid palevioletred;\r\n    color: palevioletred;\r\n    margin: 0 1em;\r\n    padding: 0.25em 1em;\r\n`;\r\n\r\nexport default function AccountBalance(props) {\r\n        const buttonText = props.showBalance ? \"Hide Balance\" : \"Show Balance\";\r\n        let content = null;\r\n        if (props.showBalance) {\r\n            content = <>Balance: ${props.amount}</>\r\n        }\r\n        let balance = props.showBalance ? <span>Balance: ${props.amount}</span> : null;\r\n        return (\r\n            <Section>\r\n                {content}\r\n                <ButtonBalance onClick={props.handleToggleShowBalance}>{buttonText}</ButtonBalance>\r\n            </Section>\r\n        );\r\n}\r\n\r\nAccountBalance.propTypes = {\r\n    amount: PropTypes.number.isRequired\r\n}","export default __webpack_public_path__ + \"static/media/logo.6ce24c58.svg\";","import React, { Component } from 'react';\r\nimport logo from './logo.svg'\r\nimport styled from 'styled-components';\r\n    const AppTitle = styled.h1`\r\n    font-size: 4rem;\r\n    `;\r\n\r\n    const AppHeader = styled.header`\r\n    background-color: #282c34;\r\n    min-height: 20vh;\r\n    display: flex;\r\n    flex-direction: row;\r\n    align-items: center;\r\n    justify-content: flex-start;\r\n    color: white;\r\n    `\r\n\r\n    const AppLogo = styled.img`\r\n    height: 8rem;\r\n    pointer-events: none;\r\n    `\r\n\r\n    export default class ExchangeHeader extends Component {\r\n        render() {\r\n            return (\r\n                <AppHeader>\r\n                    <AppLogo src={logo} alt=\"React Logo\"/>\r\n                    <AppTitle>\r\n                    Coin Exchange\r\n                    </AppTitle>\r\n                </AppHeader>\r\n            )\r\n        }\r\n    }\r\n\r\n\r\n\r\n","import React, { useState, useEffect } from 'react';\nimport CoinList from './components/CoinList/CoinList';\nimport AccountBalance from './components/AccountBalance/AccountBalance';\nimport ExchangeHeader from './components/ExchangeHeader/ExchangeHeader';\nimport styled from 'styled-components';\nimport axios from 'axios';\nimport { symbol } from 'prop-types';\n\nconst Div = styled.div`\n  text-align: center;\n  background-color: rgb(24, 24, 71);\n  color: #cccccc;\n`\n\nconst COIN_COUNT = 10;\nconst formatPrice = price => parseFloat(price).toFixed(2)\n\nfunction App(props) {\n  const [balance, setBalance] = React.useState(10000);\n  const [showBalance, setShowBalance] = React.useState(true);\n  const [coinData, setCoinData] = React.useState([]);\n\n  const componentDidMount = async () => {\n    if (coinData.length === 0) {\n      const response = await axios.get('https://api.coinpaprika.com/v1/coins')\n      const coinIds = response.data.slice(0, COIN_COUNT).map(coin => coin.id);\n      const tickerUrl = 'https://api.coinpaprika.com/v1/tickers/';\n      const promises = coinIds.map(id => axios.get(tickerUrl + id));\n      const coinData = await Promise.all(promises);\n      const coinPriceData = coinData.map(function(response) {\n        const coin = response.data;\n        return {\n          key: coin.id,\n          name: coin.name,\n          ticker: coin.symbol,\n          balance: 0,\n          price: formatPrice(coin.quotes.USD.price)\n        };\n      })\n      //Retrieve the prices\n      setCoinData(coinPriceData);\n    }\n  }\n\n  useEffect(function() {\n    componentDidMount();\n  });\n\n\n\n  const handleToggleShowBalance = () => {\n    setShowBalance(oldValue => !oldValue);\n  }\n\n  const handleRefresh = async (valueChangeId) => {\n    const tickerUrl = `https://api.coinpaprika.com/v1/tickers/${valueChangeId}`;\n    const response = await axios.get(tickerUrl);\n    const newPrice = formatPrice(response.data.quotes.USD.price);\n    const newCoinData = coinData.map(function(values) {\n      let newValues = {...values};\n      if (valueChangeId === values.key) {\n          newValues.price = newPrice\n      }\n\n      return newValues;\n    });\n    setCoinData(newCoinData);\n  }\n\n  return (\n    <Div>\n      <ExchangeHeader/>\n      <AccountBalance \n        amount = {balance} \n        showBalance = {showBalance} \n        handleToggleShowBalance = {handleToggleShowBalance}/>\n      <CoinList \n        coinData = {coinData} \n        handleRefresh = {handleRefresh} \n        showBalance = {showBalance}/>\n    </Div>\n  );\n}\n    \nexport default App;","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}